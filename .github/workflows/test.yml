name: Run Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  quality:
    runs-on: ubuntu-latest
    name: Quality Checks

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Python environment
        uses: prefix-dev/setup-pixi@v0.9.1
        with:
          environments: >-
            dev
          activate-environment: dev

      - name: Run ruff linter
        run: |
          ruff check .

      - name: Run ruff formatter check
        run: |
          ruff format --check .

  test:
    runs-on: ubuntu-latest
    needs: quality
    name: Unit and Integration Tests

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Python environment
        uses: prefix-dev/setup-pixi@v0.9.1
        with:
          environments: >-
            dev
          activate-environment: dev

      - name: Run unit tests
        run: |
          pytest tests/test_dcm4che_utils.py::TestDcm4cheUtilsUnit -v

      - name: Start dcm4chee PACS server
        run: |
          cd tests
          docker compose up -d
          echo "Waiting for dcm4chee to start..."
          sleep 60

      - name: Check dcm4chee status
        run: |
          cd tests
          docker compose ps
          docker compose logs arc | tail -50

      - name: Run integration tests
        run: |
          pytest tests/test_dcm4che_utils.py::TestDcm4cheUtilsIntegration -v
        continue-on-error: true

      - name: Show logs on failure
        if: failure()
        run: |
          cd tests
          docker compose logs

      - name: Stop dcm4chee PACS server
        if: always()
        run: |
          cd tests
          docker compose down -v
